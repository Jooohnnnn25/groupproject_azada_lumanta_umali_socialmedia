<php ?> 

</php>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title> Project </title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #fafafa;
        }

        header {
            background-color: #ffffff;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        header h1 {
            font-size: 24px;
            color: #262626;
        }

        .main-container {
            max-width: 600px;
            margin: 20px auto;
        }

        .post {
            background-color: #ffffff;
            border: 1px solid #dbdbdb;
            border-radius: 5px;
            margin-bottom: 20px;
            padding: 10px;
        }

        .post-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .post-header h2 {
            font-size: 16px;
            margin: 0;
        }

        .post-header .menu {
            cursor: pointer;
            font-size: 16px;
        }

        .post img {
            width: 100%;
            border-radius: 5px;
            margin: 10px 0;
        }

        .post p {
            font-size: 14px;
            color: #555;
        }

        .actions {
            display: flex;
            justify-content: space-between;
            margin-top: 10px;
        }

        .actions button {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 16px;
        }

        #create-post {
            padding: 20px;
            background-color: #ffffff;
            border: 1px solid #dbdbdb;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        #create-post input,
        #create-post textarea {
            width: 100%;
            padding: 10px;
            margin-bottom: 10px;
            border: 1px solid #dbdbdb;
            border-radius: 5px;
            font-size: 14px;
        }

        #create-post button {
            width: 100%;
            padding: 10px;
            background-color: #282c2f;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 16px;
            cursor: pointer;
        }

        .comments {
            margin-top: 10px;
        }

        .comments textarea {
            width: 100%;
            padding: 5px;
            margin-top: 5px;
            border: 1px solid #dbdbdb;
            border-radius: 5px;
            font-size: 14px;
        }

        .comments button {
            margin-top: 5px;
            padding: 5px 10px;
            background-color: #212325;
            color: #fff;
            border: none;
            border-radius: 5px;
            font-size: 14px;
            cursor: pointer;
        }

        .comments p {
            font-size: 14px;
            color: #555;
            margin: 5px 0;
        }

        .comments p button {
            background: none;
            border: none;
            color: #3897f0;
            cursor: pointer;
            font-size: 14px;
        }
        header nav {
            display: flex;
            gap: 20px;
        }

        header nav button {
            background: none;
            border: none;
            cursor: pointer;
            font-size: 16px;
            display: flex;
            align-items: center;
            gap: 8px;
            color: #262626;
        }

        header nav button i {
            font-size: 20px;
        }
    </style>
</head>
<body>
    <header>
        <h1> </h1>
        <nav>
            <button onclick="location.href='friends.htm'"><i class="fas fa-users"></i> Friends</button>
            <button onclick="location.href='messages.htm'"><i class="fas fa-comment-alt"></i> Messages</button>
            <button onclick="location.href='index.htm'"><i class="fas fa-home"></i> Profile</button>
        </nav>
    </header>

    <div class="main-container">
        <div id="create-post">
            <h2>Create a Post</h2>
            <textarea id="post-description" placeholder="Write something..."></textarea>
            <input type="file" id="post-image" accept="image/*">

            <label for="privacy"></label>
            <select id="privacy">
                <option value="public">Public</option>
                <option value="friends">Friends Only</option>
                <option value="private">Only Me</option>
            </select>
    
            <br><br>
            <button onclick="addPost()">Post</button>
        </div>

        <div id="post-list">
            <!-- Posts will appear here -->
        </div>
    </div>
    <script>
        const postList = document.getElementById('post-list');
    
        // Load posts from localStorage when the page loads
        function loadPosts() {
            const savedPosts = JSON.parse(localStorage.getItem('posts')) || [];
            savedPosts.forEach((post) => {
                const postElement = document.createElement('div');
                postElement.className = 'post';
                postElement.dataset.user = 'me'; // Indicates this post is created by the user
                postElement.innerHTML = `
                    <div class="post-header">
                        <h2>Your Post</h2>
                        <span class="menu" onclick="deletePost(this)">...</span>
                    </div>
                    <img src="${post.image}" alt="Post image">
                    <p>${post.description}</p>
                    <p>Privacy: ${post.privacy}</p> <!-- Display privacy setting -->
                    <div class="actions">
                        <button onclick="reactToPost(this)">‚ù§Ô∏è <span>${post.reactions || 0}</span></button>
                        <button onclick="commentPost(this)">üí¨</button>
                        <button onclick="sharePost(this, '${post.description}', '${post.image}')">üîÑ</button>
                    </div>
                    <div class="comments">
                        <textarea placeholder="Add a comment..."></textarea>
                        <button onclick="addComment(this)">Post Comment</button>
                    </div>
                `;
                postList.appendChild(postElement);
            });
        }
    
        // Save posts to localStorage
        function savePostToLocalStorage(description, image, privacy) {
            const savedPosts = JSON.parse(localStorage.getItem('posts')) || [];
            savedPosts.push({ description, image, reactions: 0, privacy });
            localStorage.setItem('posts', JSON.stringify(savedPosts));
        }
    
        // Add post function
        function addPost() {
            const description = document.getElementById('post-description').value;
            const imageInput = document.getElementById('post-image');
            const privacy = document.getElementById('privacy').value; // Get selected privacy from dropdown
    
            if (!description || !imageInput.files.length) {
                alert('Please fill in all fields and select an image.');
                return;
            }
    
            const image = URL.createObjectURL(imageInput.files[0]);
            const post = document.createElement('div');
            post.className = 'post';
            post.dataset.user = 'me'; // Indicates this post is created by the user
            post.innerHTML = `
                <div class="post-header">
                    <h2>Your Post</h2>
                    <span class="menu" onclick="deletePost(this)">...</span>
                </div>
                <img src="${image}" alt="Post image">
                <p>${description}</p>
                <p>Privacy: ${privacy}</p> <!-- Display privacy setting -->
                <div class="actions">
                    <button onclick="reactToPost(this)">‚ù§Ô∏è <span>0</span></button>
                    <button onclick="commentPost(this)">üí¨</button>
                    <button onclick="sharePost(this, '${description}', '${image}')">üîÑ</button>
                </div>
                <div class="comments">
                    <textarea placeholder="Add a comment..."></textarea>
                    <button onclick="addComment(this)">Post Comment</button>
                </div>
            `;
    
            postList.prepend(post);
    
            // Save the post to localStorage with the selected privacy setting
            savePostToLocalStorage(description, image, privacy);
    
            // Clear inputs
            document.getElementById('post-description').value = '';
            imageInput.value = '';
            document.getElementById('privacy').value = 'public'; // Reset privacy selection to default
        }
    
        // Predefined posts (other people's posts)
        const predefinedPosts = [
            {
                user: "Olivia Johnson",
                description: "Captured the perfect sunset at the beach üåÖ",
                image: "https://i.ytimg.com/vi/JG38qRNjL7k/hq720.jpg?sqp=-oaymwEhCK4FEIIDSFryq4qpAxMIARUAAAAAGAElAADIQj0AgKJD&rs=AOn4CLBTo67S-5WHR5QphPO3kfDD9unTbA",
                reactions: 12,
                privacy: "Public"
            },
            {
                user: "Liza Garcia",
                description: "Starting the day with a warm cup of coffee ‚òï",
                image: "https://png.pngtree.com/thumb_back/fh260/background/20230527/pngtree-hand-making-coffee-with-flowers-topped-with-plants-image_2680487.jpg",
                reactions: 26,
                privacy: "Friends Only"
            },
            {
                user: "Alex Johnson",
                description: "Explored the trails and reached new heights ü•æ",
                image: "https://c4.wallpaperflare.com/wallpaper/908/730/322/backpacking-adventure-tourism-mountain-top-wallpaper-preview.jpg",
                reactions: 32,
                privacy: "Friends Only"
            },
        ];
    
        // Load predefined posts
        function loadPredefinedPosts() {
            predefinedPosts.forEach((post) => {
                const postElement = document.createElement('div');
                postElement.className = 'post';
                postElement.dataset.user = 'other'; // Indicates the post is by someone else
                postElement.innerHTML = `
                    <div class="post-header">
                        <h2>${post.user}</h2>
                    </div>
                    <img src="${post.image}" alt="Post image">
                    <p>${post.description}</p>
                    <p>Privacy: ${post.privacy}</p> <!-- Display privacy setting -->
                    <div class="actions">
                        <button onclick="reactToPost(this)">‚ù§Ô∏è <span>${post.reactions}</span></button>
                        <button onclick="commentPost(this)">üí¨</button>
                        <button onclick="sharePost(this, '${post.description}', '${post.image}')">üîÑ</button>
                    </div>
                    <div class="comments">
                        <textarea placeholder="Add a comment..."></textarea>
                        <button onclick="addComment(this)">Post Comment</button>
                    </div>
                `;
                postList.appendChild(postElement);
            });
        }
    
        // Load both predefined and user posts
        window.onload = function () {
            loadPosts();
            loadPredefinedPosts();
        };
    
        function reactToPost(button) {
            const reactionsSpan = button.querySelector('span');
            const currentReactions = parseInt(reactionsSpan.textContent);
    
            if (button.classList.contains('reacted')) {
                button.classList.remove('reacted');
                reactionsSpan.textContent = currentReactions - 1;
            } else {
                button.classList.add('reacted');
                reactionsSpan.textContent = currentReactions + 1;
            }
        }
    
        function commentPost() {
            alert('Scroll down to add a comment!');
        }
    
        function sharePost(button, description, image) {
            const sharedDescription = `Shared: ${description}`;
            const post = document.createElement('div');
            post.className = 'post';
            post.dataset.user = 'me'; // Shared posts belong to the user
            post.innerHTML = `
                <div class="post-header">
                    <h2>You Shared Post</h2>
                    <span class="menu" onclick="deletePost(this)">...</span>
                </div>
                <img src="${image}" alt="Post image">
                <p>${sharedDescription}</p>
                <div class="actions">
                    <button onclick="reactToPost(this)">‚ù§Ô∏è <span>0</span></button>
                    <button onclick="commentPost(this)">üí¨</button>
                    <button onclick="sharePost(this, '${sharedDescription}', '${image}')">üîÑ</button>
                </div>
                <div class="comments">
                    <textarea placeholder="Add a comment..."></textarea>
                    <button onclick="addComment(this)">Post Comment</button>
                </div>
            `;
    
            postList.prepend(post);
    
            // Save the shared post to localStorage
            const savedPosts = JSON.parse(localStorage.getItem('posts')) || [];
            savedPosts.push({ description: sharedDescription, image, reactions: 0, privacy: "Public" });
            localStorage.setItem('posts', JSON.stringify(savedPosts));
        }
    
        function deleteComment(button) {
            const comment = button.closest('p');
            if (confirm('Are you sure you want to delete this comment?')) {
                comment.remove();
            }
        }
    
        function addComment(button) {
            const textarea = button.previousElementSibling;
            const commentText = textarea.value;
    
            if (!commentText.trim()) {
                alert('Comment cannot be empty.');
                return;
            }
    
            const comment = document.createElement('p');
            comment.textContent = commentText;
    
            // Add a delete button to the comment
            const deleteButton = document.createElement('button');
            deleteButton.textContent = 'Delete';
            deleteButton.onclick = function() {
                deleteComment(this);
            };
    
            comment.appendChild(deleteButton);
    
            button.closest('.comments').prepend(comment);
    
            textarea.value = '';
        }
    
        // Delete post function
        function deletePost(button) {
            const post = button.closest('.post');
            const user = post.dataset.user;
    
            if (user === 'me') {
                if (confirm('Are you sure you want to delete this post?')) {
                    post.remove();
    
                    // Remove post from localStorage
                    const savedPosts = JSON.parse(localStorage.getItem('posts')) || [];
                    const postIndex = savedPosts.findIndex(savedPost => savedPost.description === post.querySelector('p').textContent);
                    savedPosts.splice(postIndex, 1);
                    localStorage.setItem('posts', JSON.stringify(savedPosts));
                }
            } else {
                alert("You can't delete this post.");
            }
        }
    </script>
    
</body>
</html>