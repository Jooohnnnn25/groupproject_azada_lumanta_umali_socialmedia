<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Friend System</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f9;
            padding: 20px;
        }
        h2 {
            color: #333;
        }
        .container {
            margin-bottom: 30px;
        }
        .friend-list, .friend-request-list, .find-friend-list {
            list-style: none;
            padding: 0;
        }
        .friend-list li, .friend-request-list li, .find-friend-list li {
            margin: 10px 0;
            padding: 8px;
            background-color: #fff;
            border-radius: 5px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        button {
            padding: 5px 10px;
            border: none;
            background-color: #2b2c2b;
            color: white;
            border-radius: 5px;
            cursor: pointer;
        }
        button.cancel {
            background-color: #f44336;
        }
        button.confirm {
            background-color: #242424;
        }
        .friend-list li button {
            background-color: #f44336;
        }
        .profile-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background-color: #fff;
            padding: 20px;
            border-radius: 5px;
            width: 300px;
            text-align: center;
        }
        .modal-content h3 {
            margin-top: 0;
        }
        .modal-content .profile-icon {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            margin-bottom: 15px;
            background-color: #ccc; /* Default icon color */
            display: block;
            margin-left: auto;
            margin-right: auto;
        }
        .modal-content .profile-icon i {
            font-size: 50px;
            color: white;
            line-height: 100px;
        }
        .modal-content .profile-icon span {
            font-size: 50px;
            color: white;
            line-height: 100px;
        }
        .close-modal {
            background-color: #f44336;
            color: white;
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        
    </style>
</head>
<body>
  <button onclick="window.location.href='/Home.htm'">Return</button>
    <h2>Find Friends</h2>
    <div class="container">
        <ul class="find-friend-list" id="find-friend-list">
            <!-- List of people to send friend requests to -->
        </ul>
    </div>

    <h2>Friend Requests (Pending Confirmation)</h2>
    <div class="container">
        <ul class="friend-request-list" id="friend-request-list">
            <!-- List of pending friend requests you've received -->
        </ul>
    </div>

    <h2>Friend List</h2>
    <div class="container">
        <ul class="friend-list" id="friend-list">
            <!-- List of confirmed friends -->
        </ul>
    </div>

    <!-- Modal for Profile Information -->
    <div id="profile-modal" class="profile-modal">
        <div class="modal-content">
            <div class="profile-icon" id="profile-icon">
                <!-- Profile Icon (Placeholder Icon) -->
                <span>ðŸ‘¤</span>
            </div>
            <h3 id="profile-name"></h3>
            <p id="profile-info"></p>
            <button class="close-modal" onclick="closeProfileModal()">Close</button>
        </div>
    </div>

    <script>
        // Sample data for the friend system
        const users = [
            { name: "Olivia", birthdate: "1995-05-15", bio: "Loves coding and playing video games.", location: "New York" },
            { name: "Mary", birthdate: "1992-10-20", bio: "Food enthusiast and photographer.", location: "Los Angeles" },
            { name: "Alex", birthdate: "1990-07-12", bio: "Book lover and nature explorer.", location: "Chicago" },
            { name: "Lisa", birthdate: "1989-03-25", bio: "Sports fanatic and traveler.", location: "Miami" },
            { name: "Charlie", birthdate: "1993-02-10", bio: "Tech geek and music lover.", location: "San Francisco" },
            { name: "David", birthdate: "1988-09-30", bio: "Photography and art enthusiast.", location: "Seattle" },
            { name: "Eva", birthdate: "1996-01-14", bio: "Fashionista and social media influencer.", location: "Austin" },
            { name: "Frank", birthdate: "1994-12-05", bio: "Nature lover and environmental activist.", location: "Portland" },
            { name: "Grace", birthdate: "1991-06-22", bio: "Fitness trainer and health advocate.", location: "Denver" }
        ];

        // Retrieve lists from localStorage, or set them to defaults if not available
        const friends = JSON.parse(localStorage.getItem("friends")) || ["Olivia", "Liza", "Alex"];
        const sentRequests = JSON.parse(localStorage.getItem("sentRequests")) || ["Mary"];
        const receivedRequests = JSON.parse(localStorage.getItem("receivedRequests")) || ["Alice"];

        // Update the UI with lists
        function renderLists() {
            // Find Friends List
            const findFriendList = document.getElementById("find-friend-list");
            findFriendList.innerHTML = "";
            users.forEach(user => {
                // Only show users who are not already friends or in the sentRequests list
                if (!friends.includes(user.name) && !sentRequests.includes(user.name) && !receivedRequests.includes(user.name)) {
                    const li = document.createElement("li");
                    li.innerHTML = `<span onclick="viewProfile('${user.name}')"><span class="profile-icon">ðŸ‘¤</span>${user.name}</span> <button onclick="sendFriendRequest('${user.name}')">Send Request</button>`;
                    findFriendList.appendChild(li);
                } else if (sentRequests.includes(user.name)) {
                    const li = document.createElement("li");
                    li.innerHTML = `<span onclick="viewProfile('${user.name}')"><span class="profile-icon">ðŸ‘¤</span>${user.name}</span> <button class="cancel" onclick="cancelRequest('${user.name}')">Cancel Request</button>`;
                    findFriendList.appendChild(li);
                }
            });

            // Friend Requests List (where the user confirms requests)
            const friendRequestList = document.getElementById("friend-request-list");
            friendRequestList.innerHTML = "";
            receivedRequests.forEach(user => {
                const li = document.createElement("li");
                li.innerHTML = `<span onclick="viewProfile('${user}')"><span class="profile-icon">ðŸ‘¤</span>${user}</span> <button class="confirm" onclick="confirmFriendRequest('${user}')">Confirm</button>`;
                friendRequestList.appendChild(li);
            });

            // Friend List (where confirmed friends are displayed)
            const friendList = document.getElementById("friend-list");
            friendList.innerHTML = "";
            friends.forEach(user => {
                const li = document.createElement("li");
                li.innerHTML = `<span onclick="viewProfile('${user}')"><span class="profile-icon">ðŸ‘¤</span>${user}</span> <button onclick="unfriend('${user}')">Unfriend</button>`;
                friendList.appendChild(li);
            });
        }

        // Save the lists to localStorage
        function saveToStorage() {
            localStorage.setItem("friends", JSON.stringify(friends));
            localStorage.setItem("sentRequests", JSON.stringify(sentRequests));
            localStorage.setItem("receivedRequests", JSON.stringify(receivedRequests));
        }

        // Send a friend request (adding to sentRequests)
        function sendFriendRequest(user) {
            if (!sentRequests.includes(user) && !friends.includes(user)) {
                sentRequests.push(user);
                saveToStorage();
                renderLists();
            } else {
                alert("Request already sent or already friends.");
            }
        }

        // Cancel a sent friend request (removes from sentRequests)
        function cancelRequest(user) {
            const index = sentRequests.indexOf(user);
            if (index > -1) {
                sentRequests.splice(index, 1);
                saveToStorage();
                renderLists();
            }
        }

        // Confirm a friend request (add to friends)
        function confirmFriendRequest(user) {
            if (!friends.includes(user)) {
                friends.push(user);
                const index = receivedRequests.indexOf(user);
                if (index > -1) {
                    receivedRequests.splice(index, 1); // Remove from receivedRequests
                }
                saveToStorage();
                renderLists();
            }
        }

        // Unfriend a user (removes from friends)
        function unfriend(user) {
            const index = friends.indexOf(user);
            if (index > -1) {
                friends.splice(index, 1);
                saveToStorage();
                renderLists();
            }
        }

        // View profile of a user (show modal with profile icon and info)
        function viewProfile(user) {
            const profile = users.find(u => u.name === user);
            const profileName = document.getElementById("profile-name");
            const profileInfo = document.getElementById("profile-info");
            const profileIcon = document.getElementById("profile-icon");

            profileName.innerText = profile.name;
            profileInfo.innerHTML = ` 
                <strong>Birthdate:</strong> ${profile.birthdate}<br>
                <strong>Location:</strong> ${profile.location}<br>
                <strong>Bio:</strong> ${profile.bio}
            `;

            // Set profile icon as a generic placeholder
            profileIcon.innerHTML = '<span>ðŸ‘¤</span>'; // Generic profile icon (person icon)

            const modal = document.getElementById("profile-modal");
            modal.style.display = "flex";
        }

        // Close profile modal
        function closeProfileModal() {
            const modal = document.getElementById("profile-modal");
            modal.style.display = "none";
        }

        // Initialize the lists on page load
        function initializeRequests() {
            renderLists();
        }

        // Call the initialize function
        window.onload = initializeRequests;

    </script>

</body>
</html>
